[tool.poetry]
name = "pokemaster"
version = "0.2.0"
description = "Get Real, Living™ Pokémon in Python"
authors = ["Kip Yin <kipyty@outlook.com>"]
license = "MIT"

readme = "README.md"

respository = "https://github.com/kipyin/pokemaster"

keywords = ["pokemon", "pokedex", "pokemaster"]

[tool.poetry.dependencies]
python = "^3.6.5"
sqlalchemy = "^1.2"
attrs = "^18.2"

# `pokedex` is optional, mainly because use `poetry build` will fail to
# recognize git dependencies.
# Setting `pokedex` as an extra will ensure that `pip install pokemaster`
# will always work, while keeping `poetry add pokemaster -E pokedex` possible
# for those who use `poetry`.
pokedex = { git = "https://github.com/kipyin/pokedex.git", branch = "master", optional = true }
construct = { version = "<=2.5.3", optional = true }

[tool.poetry.extras]
pokedex = ["pokedex", "construct"]

[tool.poetry.dev-dependencies]
pytest = "^4.0"
black = { version = "^18.3-alpha.0", allows-prereleases = true }
pre-commit = "^1.12"
pytest-cov = "^2.6"
isort = { git = "https://github.com/timothycrosley/isort.git", branch = "develop" }
invoke = "^1.2"
tox = "^3.7"
towncrier = "^18.6"
coverage = "^4.5"
typing-extensions = "^3.7"

[tool.black]
line-length = 80
py36 = true
skip-string-normalization = true
skip-numeric-underscore-normalization = true

[tool.tox]
legacy_tox_ini = """

[tox]
skipsdist = true
isolated_build = true
envlist = lint, py36, py37, py38-dev

[testenv]
whitelist_externals = poetry
skip_install = true
commands =
    poetry install -v -E pokedex
    poetry run pokedex load -v
    poetry run pokedex status
    poetry run pytest tests/ --cov=pokemaster
    poetry run coverage xml

[testenv:lint]
basepython = python3.7
deps = pre-commit
commands = poetry run pre-commit run --all-files

"""

[tool.towncrier]
package = "pokemaster"
filename = "CHANGELOG.rst"
directory = "newsfragments"
issue_format = "`#{issue} <https://github.com/kipyin/pokemaster/issues/{issue}>`_"
underlines = ["-", "~"]

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "dev"
name = "Development Changes"
showcontent = true

[[tool.towncrier.type]]
directory = "docs"
name = "Improved Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
